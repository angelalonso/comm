= shell vim File management
==== shell vim File management
{{{

:e reload file
:q quit
:q! quit without saving changes
:w write file
:w {file} write new file
:x write file and exit


}}}
= shell vim Movement
==== shell vim Movement
{{{

k
h l basic motion
j

w next start of word
W next start of whitespace-delimited word
e next end of word
E next end of whitespace-delimited word
b previous start of word
B previous start of whitespace-delimited word
0 start of line
$ end of line
gg go to first line in file
G go to end of file



}}}
= shell vim Insertion
==== shell vim Insertion
{{{
To exit from insert mode use Esc or Ctrl-C
Enter insertion mode and:

a append after the cursor
A append at the end of the line
i insert before the cursor
I insert at the beginning of the line
o create a new line under the cursor
O create a new line above the cursor
R enter insert mode but replace instead of inserting chars
:r {file} insert from file


}}}
= shell vim Editing
==== shell vim Editing
{{{

u undo
yy yank (copy) a line
y{motion} yank text that {motion} moves over
p paste after cursor
P paste before cursor
<Del> or x delete a character
dd delete a line
d{motion} delete text that {motion} moves over



}}}
= vim repeats a motion or edition n times
==== vim repeats a motion or edition n times
{{{
- Preceding a motion or edition with a number repeats it n times
Examples:
50k moves 50 lines up
2dw deletes 2 words
5yy copies 5 lines
42G go to line 42

}}}
= shell wget To download a single file
==== shell wget To download a single file
{{{
wget http://path.to.the/file


}}}
= shell wget To download a file and change its name
==== shell wget To download a file and change its name
{{{
wget http://path.to.the/file -o newname


}}}
= shell wget To download a file into a directory
==== shell wget To download a file into a directory
{{{
wget -P path/to/directory http://path.to.the/file


}}}
= shell wget To continue an aborted downloaded
==== shell wget To continue an aborted downloaded
{{{
wget -c http://path.to.the/file


}}}
= shell wget To download multiples files with multiple URLs
==== shell wget To download multiples files with multiple URLs
{{{
wget URL1 URL2


}}}
= shell wget To parse a file that contains a list of URLs to fetch each one
==== shell wget To parse a file that contains a list of URLs to fetch each one
{{{
wget -i url_list.txt


}}}
= shell wget To mirror a whole page locally
==== shell wget To mirror a whole page locally
{{{
wget -pk http://path.to.the/page.html


}}}
= shell wget To mirror a whole site locally
==== shell wget To mirror a whole site locally
{{{
wget -mk http://site.tl/


}}}
= shell wget To download files according to a pattern
==== shell wget To download files according to a pattern
{{{
wget http://www.myserver.com/files-{1..15}.tar.bz2


}}}
= shell wget To download all the files in a directory with a specific extension if directory indexing is enabled
==== shell wget To download all the files in a directory with a specific extension if directory indexing is enabled
{{{
wget -r -l1 -A.extension http://myserver.com/directory


}}}
= shell wget Allows you to download just the headers of responses (-S --spider) and display them on Stdout (-O -).
==== shell wget Allows you to download just the headers of responses (-S --spider) and display them on Stdout (-O -).
{{{
wget -S --spider -O - http://google.com

}}}
= shell xargs find all file name ending with .pdf and remove them
==== shell xargs find all file name ending with .pdf and remove them
{{{
find -name *.pdf | xargs rm -rf


}}}
= shell xargs if file name contains spaces you should use this instead
==== shell xargs if file name contains spaces you should use this instead
{{{
find -name *.pdf | xargs -I{} rm -rf '{}'


}}}
= shell xargs show every .pdf like &toto.pdf= n &titi.pdf=
==== shell xargs show every .pdf like &toto.pdf= n &titi.pdf=
{{{
# -n1 => One file by one file. ( -n2 => 2 files by 2 files )

find -name *.pdf | xargs -I{} -n1 echo '&{}='

}}}
= shell yaourt All pacman commands are working the same way with yaourt.
==== shell yaourt All pacman commands are working the same way with yaourt.
{{{
Just check the pacman cheatsheet.
yaourt For instance, to install a package :
pacman -S <package name>
yaourt -S <package name>

The difference is that yaourt will also query the Arch User Repository,
and if appropriate, donwload the source and build the package requested.

Here are the commands yaourt provides while pacman doesn't :

- To search for a package and install it
yaourt <package name>
- To update the local package base and upgrade all out of date package, including the ones from
AUR and the packages based on development repos (git, svn, hg...)
yaourt -Suya --devel
- For all of the above commands, if you want yaourt to stop asking constantly for confirmations,
use the option --noconfirm
- To build a package from source
yaourt -Sb <package name>


}}}
= shell youtube-dl To download a video in 720p MP4:
==== shell youtube-dl To download a video in 720p MP4:
{{{
youtube-dl -f 22 example.com/watch?v=id


}}}
= shell youtube-dl To download a video in 720p MP4 or WebM or FLV:
==== shell youtube-dl To download a video in 720p MP4 or WebM or FLV:
{{{
youtube-dl -f 22/45/120


}}}
= shell youtube-dl To list all available formats of a video:
==== shell youtube-dl To list all available formats of a video:
{{{
youtube-dl -F example.com/watch?v=id


}}}
= shell youtube-dl To download a video to /$uploader/$date/$title.$ext:
==== shell youtube-dl To download a video to /$uploader/$date/$title.$ext:
{{{
youtube-dl -o '%(uploader)s/%(date)s/%(title)s.%(ext)s' example.com/watch?v=id


}}}
= shell youtube-dl To download a video playlist starting from a certain video:
==== shell youtube-dl To download a video playlist starting from a certain video:
{{{
youtube-dl --playlist-start 5 example.com/watch?v=id&list=listid


}}}
= shell youtube-dl To simulate a download with youtube-dl:
==== shell youtube-dl To simulate a download with youtube-dl:
{{{
youtube-dl -s example.com/watch?v=id


}}}
= shell youtube-dl For all video formats see
==== shell youtube-dl For all video formats see
{{{

}}}
= shell youtube-dl http://en.wikipedia.org/wiki/YouTube#Quality_and_codecs
==== shell youtube-dl http://en.wikipedia.org/wiki/YouTube#Quality_and_codecs
{{{

}}}
= shell yum To install the latest version of a package:
==== shell yum To install the latest version of a package:
{{{
yum install <package name>


}}}
= shell yum To perform a local install:
==== shell yum To perform a local install:
{{{
yum localinstall <package name>

}}}
= shell yum To remove a package:
==== shell yum To remove a package:
{{{
yum remove <package name>

}}}
= shell yum To search for a package:
==== shell yum To search for a package:
{{{
yum search <package name>

}}}
= shell yum To find what package installs a program:
==== shell yum To find what package installs a program:
{{{
yum whatprovides </path/to/program>

}}}
= shell yum To find the dependencies of a package:
==== shell yum To find the dependencies of a package:
{{{
yum deplist <package name>

}}}
= shell yum To find information about a package:
==== shell yum To find information about a package:
{{{
yum info <package name>

}}}
= shell yum List currently enabled repositories:
==== shell yum List currently enabled repositories:
{{{
yum repolist

}}}
= shell yum To download the source RPM for a package:
==== shell yum To download the source RPM for a package:
{{{
yumdownloader --source <package name>

(You have to install yumdownloader first, which is installed by the yum-utils package)
{{{
